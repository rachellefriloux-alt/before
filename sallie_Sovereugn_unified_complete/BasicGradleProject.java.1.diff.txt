BASE: C:\Users\chell\Documents\Sallie_Sovereign\_staging\incoming\gradle\gradle-9.0.0\src\tooling-api\org\gradle\tooling\model\gradle\BasicGradleProject.java
OTHER: C:\Users\chell\Documents\Sallie_Sovereign\_staging\incoming\gradle\gradle-9.0.0\src\ide\org\gradle\plugins\ide\internal\tooling\model\BasicGradleProject.java
---- DIFF ----
 * Copyright 2018 the original author or authors.
package org.gradle.plugins.ide.internal.tooling.model;
import org.gradle.tooling.internal.gradle.DefaultProjectIdentifier;
import java.util.LinkedHashSet;
import java.util.Set;
public class BasicGradleProject extends PartialBasicGradleProject {
    private File projectDirectory;
    private Set<BasicGradleProject> children = new LinkedHashSet<BasicGradleProject>();
    private String buildTreePath;
    public File getProjectDirectory() {
        return projectDirectory;
    }
    public BasicGradleProject setProjectDirectory(File projectDirectory) {
        this.projectDirectory = projectDirectory;
        return this;
    }
    public BasicGradleProject setProjectIdentifier(DefaultProjectIdentifier projectIdentifier) {
        super.setProjectIdentifier(projectIdentifier);
        return this;
    }
    @Override
    public BasicGradleProject setName(String name) {
        super.setName(name);
        return this;
    }
    @Override
    public Set<? extends BasicGradleProject> getChildren() {
        return children;
    }
    public BasicGradleProject addChild(BasicGradleProject child) {
        children.add(child);
        return this;
    }

    public String getBuildTreePath() {
        return buildTreePath;
    }

    public BasicGradleProject setBuildTreePath(String path) {
        buildTreePath = path;
        return this;
    }

 * Copyright 2013 the original author or authors.
package org.gradle.tooling.model.gradle;
import org.gradle.api.Incubating;
import org.gradle.tooling.model.DomainObjectSet;
import org.gradle.tooling.model.Model;
import org.gradle.tooling.model.ProjectIdentifier;
import org.gradle.tooling.model.ProjectModel;
import org.jspecify.annotations.Nullable;
/**
 * Provides some basic details about a Gradle project.
 *
 * @since 1.8
 */
public interface BasicGradleProject extends Model, ProjectModel {
    /**
     * Returns the identifier for this Gradle project.
     *
     * @since 2.13
     */
    ProjectIdentifier getProjectIdentifier();
    /**
     * Returns the name of this project. Note that the name is not a unique identifier for the project.
     *
     * @return The name of this project.
     */
    String getName();
    /**
     * Returns the path of this project. The path can be used as a unique identifier for the project within a given build.
     *
     * @return The path of this project.
     */
    String getPath();
    /**
     * Returns the project directory for this project.
     *
     * @return The project directory.
     */
    File getProjectDirectory();
    /**
     * Returns the parent of this project, or {@code null} if this is the root project.
     *
     * @return The parent of this project, or {@code null} if this is the root project.
     */
    @Nullable
    BasicGradleProject getParent();
    /**
     * Returns the child projects of this project, or the empty set if there are no child projects.
     *
     * @return The child projects of this project, or the empty set if there are no child projects.
     */
    DomainObjectSet<? extends BasicGradleProject> getChildren();
    /**
     * Returns a path to the project for the full build tree
     *
     * @return a path to the project for the full build tree
     * @throws org.gradle.tooling.model.UnsupportedMethodException When the target Gradle version does not support this method.
     * @since 8.2
     */
    @Incubating
    String getBuildTreePath();
