BASE: C:\Users\chell\Documents\Sallie_Sovereign\_staging\incoming\gradle\gradle-9.0.0\src\tooling-api\org\gradle\tooling\BuildAction.java
OTHER: C:\Users\chell\Documents\Sallie_Sovereign\_staging\incoming\gradle\gradle-9.0.0\src\core\org\gradle\internal\invocation\BuildAction.java
---- DIFF ----
 * Copyright 2011 the original author or authors.
package org.gradle.internal.invocation;
import org.gradle.api.internal.StartParameterInternal;
 * An object that describes the top level build action to perform, e.g. run some tasks, build a tooling model, run some tests, etc.
public interface BuildAction {
    StartParameterInternal getStartParameter();
     * Will this action result in tasks being run?
     * <p>An action may both run tasks and create a model.</p>
    boolean isRunTasks();
    /**
     * Will this action return a tooling model as its result?
     *
     * <p>An action may both run tasks and create a model.</p>
     */
    boolean isCreateModel();

 * Copyright 2013 the original author or authors.
package org.gradle.tooling;
import java.io.Serializable;
 * An action that executes against a Gradle build and produces a result of type {@code T}.
 *
 * <p>You can execute a {@code BuildAction} using the {@link ProjectConnection#action(BuildAction)} method.</p>
 *
 * @param <T> The type of result produced by this action.
 * @since 1.8
public interface BuildAction<T> extends Serializable {
     * Executes this action and returns the result.
     * @param controller The controller to use to access and control the build.
     * @return The result
     * @since 1.8
    T execute(BuildController controller);
