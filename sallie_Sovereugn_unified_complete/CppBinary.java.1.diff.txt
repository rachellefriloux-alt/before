BASE: C:\Users\chell\Documents\Sallie_Sovereign\_staging\incoming\gradle\gradle-9.0.0\src\tooling-api\org\gradle\tooling\model\cpp\CppBinary.java
OTHER: C:\Users\chell\Documents\Sallie_Sovereign\_staging\incoming\gradle\gradle-9.0.0\src\language-native\org\gradle\language\cpp\CppBinary.java
---- DIFF ----
 * Copyright 2017 the original author or authors.
package org.gradle.language.cpp;
import org.gradle.api.attributes.Attribute;
import org.gradle.api.component.BuildableComponent;
import org.gradle.api.file.FileCollection;
import org.gradle.api.provider.Provider;
import org.gradle.language.ComponentWithDependencies;
import org.gradle.language.cpp.tasks.CppCompile;
import org.gradle.language.nativeplatform.ComponentWithObjectFiles;
import org.gradle.nativeplatform.Linkage;
 * A binary built from C++ source and linked from the resulting object files.
 * @since 4.2
public interface CppBinary extends ComponentWithObjectFiles, ComponentWithDependencies, BuildableComponent {
     * The dependency resolution attribute use to indicate whether a binary is debuggable or not.
    Attribute<Boolean> DEBUGGABLE_ATTRIBUTE = Attribute.of("org.gradle.native.debuggable", Boolean.class);
     * The dependency resolution attribute use to indicate whether a binary is optimized or not.
     *
     * @since 4.5
    Attribute<Boolean> OPTIMIZED_ATTRIBUTE = Attribute.of("org.gradle.native.optimized", Boolean.class);
     * The dependency resolution attribute use to indicate which linkage a binary uses.
     *
     * @since 4.5
    Attribute<Linkage> LINKAGE_ATTRIBUTE = Attribute.of("org.gradle.native.linkage", Linkage.class);
     * Returns the C++ source files of this binary.
    FileCollection getCppSource();
     * Returns the header directories to use to compile this binary. Includes the header directories of this binary plus those of its dependencies.
    FileCollection getCompileIncludePath();

    /**
     * Returns the link libraries to use to link this binary. Includes the link libraries of the component's dependencies.
     */
    FileCollection getLinkLibraries();

    /**
     * Returns the runtime libraries required by this binary. Includes the runtime libraries of the component's dependencies.
     */
    FileCollection getRuntimeLibraries();

    /**
     * Returns the target platform for this component.
     *
     * @since 4.5
     */
    CppPlatform getTargetPlatform();

    /**
     * Returns the compile task for this binary.
     *
     * @since 4.5
     */
    Provider<CppCompile> getCompileTask();

 * Copyright 2018 the original author or authors.
package org.gradle.tooling.model.cpp;
 * Represents a C++ binary.
 * @since 4.10
public interface CppBinary {
     * Returns the name of this binary. This is used to disambiguate the binaries of a project. Each binary has a unique name within its project. However, these names are not unique across multiple projects.
    String getName();
     * Returns the variant name of this binary. This is used to disambiguate the binaries of a component. Each binary has a unique variant name within its component. However, these names are not unique across multiple projects or components.
    String getVariantName();
     * Returns the base name of this binary. This is used to calculate output file names.
    String getBaseName();
     * Returns the compilation details.
    CompilationDetails getCompilationDetails();
     * Returns the linkage details.
    LinkageDetails getLinkageDetails();
